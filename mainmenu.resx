<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAAIGNIUk0AAHomAACAhAAA+gAAAIDoAAB1
        MAAA6mAAADqYAAAXcJy6UTwAAAAHdElNRQfnBRsLEzG0CXA9AAAD9ElEQVR4Xu2bO2gUURSGk5AYxYhB
        LLTwAYoK9gE7i6igQgorQQvFRmysfYEIprBRxMZCQQsVBLVRfGGhoEXwjfhWDCgKiqLEB2r8ztxzJ7ub
        nd07s6+543zww+zcc86c8292dmd209ZsRkdHO9B6dA19QSPoLtqGejQsmzDgFHQeRfEULdDwbMFgk5E8
        69V4jxZrWjZgIHnmb8h0JbxBD8xmEe/QIk33GwaJGn4P6tCYAfRddhbgvwkMEPVnv0tDQti3DMkJsRB/
        Xw407jy8hbVsmEDDsYe3EOO3CTSaeHgLsX6aQIM1D28hxy8TaKxuw1vI9cMEGooafqeGJIYa6TaBRho2
        vIVa6TSBBho+vIWa6TKBAzdteAu102ECB2z68BaO0VoTOFDLhrdwrNaYwAFaPryFYzbXBAqnZngLx26O
        CRRM3fAWemisCRRK7fAWemmMCRRI/fAWeqqvCSR6M7yF3upjAgneDW+hx9pMINDb4S30mswEArwf3kLP
        8UxgITPDW+jdzQR29KByt663a4i3MMNyVPmWOw/OBbuL8X54C7OUM+EF6pXF1cHDYjIzvIWZypkwKAun
        zHbIXs3JHMy2Ev0NpjQMy86HZjvgG+rS+EzCfFeCSZX/0YCrwaSK7DhpNkMOoE6NzxTMtRaNewmsMttF
        fEVylrQ6i2ZqndRDr53oIHqM7AwfUCmDNuGMeVyRw0GwB9DrOtNyRZ6jXpsgH4TKfRYo5FIQ7AH0usO0
        HMkjNF/Dx2CnfCaQt0UJeIkK8dmAt+gJuog2o24NjYagCagQnw3o1yV3SMoNMLkhiQ0gtx3Ju80RJBdd
        QxG6hU6jjWiSpseG3PQYQN4cdDOoEA/5BdlSLRML8tJhADmzkZyAkvILrdByzpCTGgOum9Qi/qBPEfqJ
        SvmIpmlJJ4hvvQHE95u0ELkU3YIifw/MWheSK7ZhVMhuDXGC+FQYcMikhWzVpaoQ24fkL8VyX5ecID4V
        Blw2aSHTdckJ4guvUn+gdl2qCrGpMEDe0iwjutsZci6Y1JCJulQVYnMDTEpIboAuuUNSboDJDckN0CUn
        iM8NMGkBuQG62xlycgNMakhugC5Vhdi6GCA3MeRy1HJHl5wgvpUG7DcpIUt0KR4kPjP5AWLGPF2qCrEt
        MYC4biQ3QC3yRcgMXY4HiaVO3kbjbyeXgbimG0DMVHQiiB5jSJfjQ/JcJFdihfxG8s+OcrVXSZ+RpR4G
        yHd65Y5jJYaX/hpEWKMlk0GBDaZOTdTDgCQc03K1QaFNqJy7rrzWUs6Qc9ykJkJe9/LdYP2+6abYLLQP
        yY2KOGbI73EGtIwz5CxE96SAI3KSfoWOoj4tU4W2tn9M5Vaq8Yh/vgAAAABJRU5ErkJggg==
</value>
  </data>
</root>